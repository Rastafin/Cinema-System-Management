// <auto-generated />
using System;
using KinoProjekt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KinoProjekt.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230101122016_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("KinoProjekt.Model.Bilet", b =>
                {
                    b.Property<int>("IdBilet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cena")
                        .HasColumnType("REAL");

                    b.Property<int>("IdKlient")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSeans")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Siedzenie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdBilet");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdSeans");

                    b.ToTable("DbBilet");
                });

            modelBuilder.Entity("KinoProjekt.Model.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyKlient")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyZarchiwizowany")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataUrodzenia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KodPocztowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrDomu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrMieszkania")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrTelefonu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plec")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("StanKonta")
                        .HasColumnType("REAL");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wojewodztwo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdKlient");

                    b.ToTable("DbKlient");
                });

            modelBuilder.Entity("KinoProjekt.Model.Opinia", b =>
                {
                    b.Property<int>("IdOpinia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyZarchiwizowany")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdKlient1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSeans1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Komentarz")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ocena")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdOpinia");

                    b.HasIndex("IdKlient1");

                    b.HasIndex("IdSeans1");

                    b.ToTable("DbOpinia");
                });

            modelBuilder.Entity("KinoProjekt.Model.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyKlient")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyZarchiwizowany")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataUrodzenia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KodPocztowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrDomu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrMieszkania")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NrTelefonu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plec")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StopienUprawnienia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wojewodztwo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPracownik");

                    b.ToTable("DbPracownik");
                });

            modelBuilder.Entity("KinoProjekt.Model.Seans", b =>
                {
                    b.Property<int>("IdSeans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyZarchiwizowany")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dlugosc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZajeteMiejsca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Zdjecie")
                        .HasColumnType("BLOB");

                    b.HasKey("IdSeans");

                    b.ToTable("DbSeans");
                });

            modelBuilder.Entity("KinoProjekt.Model.Bilet", b =>
                {
                    b.HasOne("KinoProjekt.Model.Klient", "klient")
                        .WithMany("KupioneBilety")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KinoProjekt.Model.Seans", "seans")
                        .WithMany("WykupioneBilety")
                        .HasForeignKey("IdSeans")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("klient");

                    b.Navigation("seans");
                });

            modelBuilder.Entity("KinoProjekt.Model.Opinia", b =>
                {
                    b.HasOne("KinoProjekt.Model.Klient", "IdKlient")
                        .WithMany()
                        .HasForeignKey("IdKlient1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KinoProjekt.Model.Seans", "IdSeans")
                        .WithMany("PosiadaneOpinie")
                        .HasForeignKey("IdSeans1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdKlient");

                    b.Navigation("IdSeans");
                });

            modelBuilder.Entity("KinoProjekt.Model.Klient", b =>
                {
                    b.Navigation("KupioneBilety");
                });

            modelBuilder.Entity("KinoProjekt.Model.Seans", b =>
                {
                    b.Navigation("PosiadaneOpinie");

                    b.Navigation("WykupioneBilety");
                });
#pragma warning restore 612, 618
        }
    }
}
